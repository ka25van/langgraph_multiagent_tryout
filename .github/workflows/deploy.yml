name: Testing Langgraph_tryout deployment

on:
  push:
    branches: [master]

jobs:
  # ------------------------------------------------
  # 1. Frontend: Build React App and Deploy to S3
  # ------------------------------------------------
  frontend:
    name: Deploy Frontend to S3
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: langgraph-frontend-kaverappa
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: "frontend/build"

  # ------------------------------------------------
  # 2. Dockerize Backend and Push to Docker Hub
  # ------------------------------------------------
  dockerize-backend:
    name: Dockerize & Push Backend to Docker Hub
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        run: |
          docker build -t kaverappa25/langgraph-backend:latest .
          docker push kaverappa25/langgraph-backend:latest

  # ------------------------------------------------
  # 3. Deploy Backend to EC2 via Docker
  # ------------------------------------------------
  backend:
    name: Deploy Backend via Docker on EC2
    runs-on: ubuntu-latest
    needs: dockerize-backend #Runs only after docker image is created

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: SSH to EC2 and run Docker container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker pull kaverappa25/langgraph-backend:latest
            docker stop langgraph-backend || true
            docker rm langgraph-backend || true
            docker run -d --name langgraph-backend -p 3000:3000 --restart unless-stopped kaverappa25/langgraph-backend:latest
          EOF
